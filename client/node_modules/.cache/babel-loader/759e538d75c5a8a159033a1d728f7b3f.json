{"ast":null,"code":"var _jsxFileName = \"/Users/chandya/Desktop/xchangepack_forum/client/src/components/Ask/Pages/Auth/Register.js\";\nimport React, { useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport validator from \"validator\";\nimport axios from \"axios\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\nexport default function Register() {\n  const classes = useStyles();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(null);\n  const [password, setPassword] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(null);\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n\n  const handleOnSubmit = async event => {\n    event.preventDefault();\n    setEmailError(null);\n    setPasswordError(null);\n    let errors = 0;\n\n    if (!validator.isEmail(email)) {\n      setEmailError(\"Email must be in correct format\");\n      errors++;\n    }\n\n    if (password !== passwordConfirmation) {\n      setPasswordError(\"Passwords don't match.\");\n      errors++;\n    }\n\n    if (errors) return;\n    const data = {\n      name,\n      email,\n      password\n    };\n\n    try {\n      await axios.post(\"/api/auth/register\", data);\n    } catch (e) {\n      const message = e.response.data.message;\n\n      if (message === \"email_exists\") {\n        setEmailError(\"User with this email already exists\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"Register\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleOnSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    fullWidth: true,\n    label: \"Name\",\n    autoFocus: true,\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    fullWidth: true,\n    label: \"Email Address\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    error: !!emailError,\n    helperText: emailError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    fullWidth: true,\n    label: \"Password\",\n    type: \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    error: !!passwordError,\n    helperText: passwordError,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    required: true,\n    fullWidth: true,\n    label: \"Password Confirmation\",\n    type: \"password\",\n    value: passwordConfirmation,\n    onChange: e => setPasswordConfirmation(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, \"Sign In\"))));\n}","map":{"version":3,"sources":["/Users/chandya/Desktop/xchangepack_forum/client/src/components/Ask/Pages/Auth/Register.js"],"names":["React","useState","Avatar","Button","CssBaseline","TextField","LockOutlinedIcon","Typography","makeStyles","Container","validator","axios","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","Register","classes","name","setName","email","setEmail","emailError","setEmailError","password","setPassword","passwordError","setPasswordError","passwordConfirmation","setPasswordConfirmation","handleOnSubmit","event","preventDefault","errors","isEmail","data","post","e","message","response","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport validator from \"validator\";\nimport axios from \"axios\";\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nexport default function Register() {\n  const classes = useStyles();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(null);\n  const [password, setPassword] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(null);\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n\n  const handleOnSubmit = async event => {\n    event.preventDefault();\n    setEmailError(null);\n    setPasswordError(null);\n    let errors = 0;\n\n    if (!validator.isEmail(email)) {\n      setEmailError(\"Email must be in correct format\");\n      errors++;\n    }\n\n    if (password !== passwordConfirmation) {\n      setPasswordError(\"Passwords don't match.\");\n      errors++;\n    }\n\n    if (errors) return;\n\n    const data = {\n      name,\n      email,\n      password\n    };\n\n    try {\n      await axios.post(\"/api/auth/register\", data);\n    } catch (e) {\n      const message = e.response.data.message;\n      if (message === \"email_exists\") {\n        setEmailError(\"User with this email already exists\");\n      }\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          \n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Register\n        </Typography>\n        <form className={classes.form} onSubmit={handleOnSubmit}>\n          <TextField\n            required\n            fullWidth\n            label=\"Name\"\n            autoFocus\n            value={name}\n            onChange={e => setName(e.target.value)}\n          />\n          <TextField\n            required\n            fullWidth\n            label=\"Email Address\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n            error={!!emailError}\n            helperText={emailError}\n          />\n          <TextField\n            required\n            fullWidth\n            label=\"Password\"\n            type=\"password\"\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n            error={!!passwordError}\n            helperText={passwordError}\n          />\n          <TextField\n            required\n            fullWidth\n            label=\"Password Confirmation\"\n            type=\"password\"\n            value={passwordConfirmation}\n            onChange={e => setPasswordConfirmation(e.target.value)}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n        </form>\n      </div>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}