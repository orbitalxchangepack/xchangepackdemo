{"ast":null,"code":"var _jsxFileName = \"/Users/CHLY/Downloads/xchangepack_forum/client/src/components/Ask/Pages/Thread/ShowThread.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Button from \"@material-ui/core/Button\";\nimport { TextField } from \"@material-ui/core\";\nimport AuthContext from \"../../Contexts/AuthContext\";\nexport default function ShowThread() {\n  const {\n    user\n  } = useContext(AuthContext);\n  const [thread, setThread] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(false);\n  const [isReplying, setIsReplying] = useState(false);\n  const [replyContent, setReplyContent] = useState(\"\");\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    getThread();\n    getPosts();\n  }, []);\n\n  const getThread = async () => {\n    const response = await axios.get('/api/thread/' + id);\n    setThread(response.data);\n  };\n\n  const getPosts = async () => {\n    const response = await axios.get('/api/post/thread/' + id, {\n      params: {\n        page\n      }\n    });\n\n    if (response.data.length) {\n      setPosts(response.data);\n      setPage(page + 1);\n      setHasMore(true);\n    } else {\n      setHasMore(false);\n    }\n  };\n\n  const handleReply = async event => {\n    event.preventDefault();\n    if (!replyContent) return;\n    const data = {\n      userId: user._id,\n      threadId: thread._id,\n      content: replyContent\n    };\n    const response = await axios.post(\"/api/post/create\", data);\n    setPosts([...posts, response.data]);\n  };\n\n  const history = useHistory();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"2rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, thread && /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 24\n    }\n  }, thread.title), thread && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 24\n    }\n  }, thread.content), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, posts.map((post, index) => /*#__PURE__*/React.createElement(ListItem, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: post.content,\n    secondary: post.createdAt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    disabled: !hasMore,\n    style: {\n      marginRight: \"1rem\"\n    },\n    onClick: getPosts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"Load More Posts\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => setIsReplying(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"Reply\"), isReplying && /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleReply,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Content\",\n    value: replyContent,\n    onChange: e => setReplyContent(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 20\n    }\n  }, \"Reply\")));\n}","map":{"version":3,"sources":["/Users/CHLY/Downloads/xchangepack_forum/client/src/components/Ask/Pages/Thread/ShowThread.js"],"names":["React","useState","useEffect","useContext","useHistory","useParams","axios","List","ListItem","ListItemText","Button","TextField","AuthContext","ShowThread","user","thread","setThread","posts","setPosts","page","setPage","hasMore","setHasMore","isReplying","setIsReplying","replyContent","setReplyContent","id","getThread","getPosts","response","get","data","params","length","handleReply","event","preventDefault","userId","_id","threadId","content","post","history","padding","title","map","index","createdAt","marginRight","e","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext} from \"react\";\nimport {useHistory, useParams} from \"react-router-dom\";\nimport axios from \"axios\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Button from \"@material-ui/core/Button\";\nimport {TextField} from \"@material-ui/core\";\nimport AuthContext from \"../../Contexts/AuthContext\";\n\nexport default function ShowThread() {\n    const {user} = useContext(AuthContext)\n    const [thread, setThread] = useState(null);\n    const [posts, setPosts] = useState([]);\n    const [page, setPage] = useState(1);\n    const [hasMore, setHasMore] = useState(false);\n    const [isReplying, setIsReplying] = useState(false);\n    const [replyContent, setReplyContent] = useState(\"\");\n\n    const {id} = useParams();\n    useEffect(() => {\n        getThread();\n        getPosts();\n    }, []);\n\n    const getThread = async () => {\n        const response = await axios.get('/api/thread/'+id);\n        setThread(response.data);\n    };\n\n    const getPosts = async () => {\n        const response = await axios.get('/api/post/thread/'+id, {\n            params: {\n                page\n            }\n        });\n        if (response.data.length) {\n            setPosts(response.data);\n            setPage(page + 1);\n            setHasMore(true);\n        } else {\n            setHasMore(false);\n        }\n    };\n\n    const handleReply = async event => {\n        event.preventDefault();\n        if (!replyContent) return;\n        const data = {\n            userId: user._id,\n            threadId: thread._id,\n            content: replyContent\n        };\n\n        const response = await axios.post(\"/api/post/create\", data);\n        setPosts([...posts, response.data]);\n    }\n\n    const history = useHistory();\n    return (\n        <div style={{padding: \"2rem\"}}>\n\n            {thread && <h1>{thread.title}</h1>}\n\n            {thread && <p>{thread.content}</p>}\n\n\n            <List>\n                {posts.map((post, index) => (\n                    <ListItem key={index}>\n                        <ListItemText primary={post.content} secondary={post.createdAt} />\n                    </ListItem>\n                ))}\n            </List>\n\n            <Button variant=\"contained\"\n                    color=\"primary\"\n                    disabled={!hasMore}\n                    style={{marginRight: \"1rem\"}}\n                    onClick={getPosts}>Load More Posts</Button>\n\n            <Button variant=\"contained\" color=\"primary\" onClick={() => setIsReplying(true)}>Reply</Button>\n            {isReplying && (\n                <form onSubmit={handleReply}>\n                    <TextField fullWidth\n                               label=\"Content\"\n                               value={replyContent}\n                               onChange={e => setReplyContent(e.target.value)}/>\n\n                   <Button type=\"submit\">Reply</Button>\n                </form>\n            )}\n\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}