{"ast":null,"code":"var _jsxFileName = \"/Users/CHLY/Downloads/xchangepack/client/src/components/Ask/Pages/Thread/ShowThread.js\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Button from \"@material-ui/core/Button\";\nimport { TextField } from \"@material-ui/core\";\nimport AuthContext from \"../../Contexts/AuthContext\";\nexport default function ShowThread() {\n  const {\n    user\n  } = useContext(AuthContext);\n  const [thread, setThread] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(false);\n  const [isReplying, setIsReplying] = useState(false);\n  const [replyContent, setReplyContent] = useState(\"\");\n  const {\n    id\n  } = useParams();\n\n  const getPosts = async () => {\n    const response = await axios.get(\"/api/post/thread/\" + id, {\n      params: {\n        page\n      }\n    });\n\n    if (response.data.length) {\n      setPosts(response.data);\n      setPage(page + 1);\n      setHasMore(true);\n    } else {\n      setHasMore(false);\n    }\n  };\n\n  useEffect(() => {\n    const getThread = async () => {\n      const response = await axios.get(\"/api/thread/\" + id);\n      setThread(response.data);\n    };\n\n    getThread();\n    getPosts();\n  }, [getPosts]);\n\n  const handleReply = async event => {\n    event.preventDefault();\n    if (!replyContent) return;\n    const data = {\n      userId: user._id,\n      threadId: thread._id,\n      content: replyContent\n    };\n    const response = await axios.post(\"/api/post/create\", data);\n    setPosts([...posts, response.data]);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"2rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, thread && /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 18\n    }\n  }, thread.title), thread && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 18\n    }\n  }, thread.content), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, posts.map((post, index) => /*#__PURE__*/React.createElement(ListItem, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: post.content,\n    secondary: post.createdAt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    disabled: !hasMore,\n    style: {\n      marginRight: \"1rem\"\n    },\n    onClick: getPosts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"Load More Posts\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => setIsReplying(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"Reply\"), isReplying && /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleReply,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    label: \"Content\",\n    value: replyContent,\n    onChange: e => setReplyContent(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"Reply\")));\n}","map":{"version":3,"sources":["/Users/CHLY/Downloads/xchangepack/client/src/components/Ask/Pages/Thread/ShowThread.js"],"names":["React","useState","useEffect","useContext","useParams","axios","List","ListItem","ListItemText","Button","TextField","AuthContext","ShowThread","user","thread","setThread","posts","setPosts","page","setPage","hasMore","setHasMore","isReplying","setIsReplying","replyContent","setReplyContent","id","getPosts","response","get","params","data","length","getThread","handleReply","event","preventDefault","userId","_id","threadId","content","post","padding","title","map","index","createdAt","marginRight","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AAEA,eAAe,SAASC,UAAT,GAAsB;AACnC,QAAM;AAAEC,IAAAA;AAAF,MAAWV,UAAU,CAACQ,WAAD,CAA3B;AACA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACiB,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACmB,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACqB,UAAD,EAAaC,aAAb,IAA8BtB,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACuB,YAAD,EAAeC,eAAf,IAAkCxB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM;AAAEyB,IAAAA;AAAF,MAAStB,SAAS,EAAxB;;AAEA,QAAMuB,QAAQ,GAAG,YAAY;AAC3B,UAAMC,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,GAAN,CAAU,sBAAsBH,EAAhC,EAAoC;AACzDI,MAAAA,MAAM,EAAE;AACNZ,QAAAA;AADM;AADiD,KAApC,CAAvB;;AAKA,QAAIU,QAAQ,CAACG,IAAT,CAAcC,MAAlB,EAA0B;AACxBf,MAAAA,QAAQ,CAACW,QAAQ,CAACG,IAAV,CAAR;AACAZ,MAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACAG,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KAJD,MAIO;AACLA,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,GAbD;;AAcAnB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM+B,SAAS,GAAG,YAAY;AAC5B,YAAML,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,GAAN,CAAU,iBAAiBH,EAA3B,CAAvB;AACAX,MAAAA,SAAS,CAACa,QAAQ,CAACG,IAAV,CAAT;AACD,KAHD;;AAIAE,IAAAA,SAAS;AACTN,IAAAA,QAAQ;AACT,GAPQ,EAON,CAACA,QAAD,CAPM,CAAT;;AASA,QAAMO,WAAW,GAAG,MAAOC,KAAP,IAAiB;AACnCA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAI,CAACZ,YAAL,EAAmB;AACnB,UAAMO,IAAI,GAAG;AACXM,MAAAA,MAAM,EAAExB,IAAI,CAACyB,GADF;AAEXC,MAAAA,QAAQ,EAAEzB,MAAM,CAACwB,GAFN;AAGXE,MAAAA,OAAO,EAAEhB;AAHE,KAAb;AAMA,UAAMI,QAAQ,GAAG,MAAMvB,KAAK,CAACoC,IAAN,CAAW,kBAAX,EAA+BV,IAA/B,CAAvB;AACAd,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWY,QAAQ,CAACG,IAApB,CAAD,CAAR;AACD,GAXD;;AAaA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEW,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG5B,MAAM,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,MAAM,CAAC6B,KAAZ,CADb,EAGG7B,MAAM,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,MAAM,CAAC0B,OAAX,CAHb,eAKE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGxB,KAAK,CAAC4B,GAAN,CAAU,CAACH,IAAD,EAAOI,KAAP,kBACT,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEJ,IAAI,CAACD,OAA5B;AAAqC,IAAA,SAAS,EAAEC,IAAI,CAACK,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CADH,CALF,eAaE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,QAAQ,EAAE,CAAC1B,OAHb;AAIE,IAAA,KAAK,EAAE;AAAE2B,MAAAA,WAAW,EAAE;AAAf,KAJT;AAKE,IAAA,OAAO,EAAEpB,QALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAbF,eAuBE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,OAAO,EAAE,MAAMJ,aAAa,CAAC,IAAD,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAvBF,EA8BGD,UAAU,iBACT;AAAM,IAAA,QAAQ,EAAEY,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,KAAK,EAAEV,YAHT;AAIE,IAAA,QAAQ,EAAGwB,CAAD,IAAOvB,eAAe,CAACuB,CAAC,CAACC,MAAF,CAASC,KAAV,CAJlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARF,CA/BJ,CADF;AA6CD","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Button from \"@material-ui/core/Button\";\nimport { TextField } from \"@material-ui/core\";\nimport AuthContext from \"../../Contexts/AuthContext\";\n\nexport default function ShowThread() {\n  const { user } = useContext(AuthContext);\n  const [thread, setThread] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const [page, setPage] = useState(1);\n  const [hasMore, setHasMore] = useState(false);\n  const [isReplying, setIsReplying] = useState(false);\n  const [replyContent, setReplyContent] = useState(\"\");\n  const { id } = useParams();\n\n  const getPosts = async () => {\n    const response = await axios.get(\"/api/post/thread/\" + id, {\n      params: {\n        page,\n      },\n    });\n    if (response.data.length) {\n      setPosts(response.data);\n      setPage(page + 1);\n      setHasMore(true);\n    } else {\n      setHasMore(false);\n    }\n  };\n  useEffect(() => {\n    const getThread = async () => {\n      const response = await axios.get(\"/api/thread/\" + id);\n      setThread(response.data);\n    };\n    getThread();\n    getPosts();\n  }, [getPosts]);\n\n  const handleReply = async (event) => {\n    event.preventDefault();\n    if (!replyContent) return;\n    const data = {\n      userId: user._id,\n      threadId: thread._id,\n      content: replyContent,\n    };\n\n    const response = await axios.post(\"/api/post/create\", data);\n    setPosts([...posts, response.data]);\n  };\n\n  return (\n    <div style={{ padding: \"2rem\" }}>\n      {thread && <h1>{thread.title}</h1>}\n\n      {thread && <p>{thread.content}</p>}\n\n      <List>\n        {posts.map((post, index) => (\n          <ListItem key={index}>\n            <ListItemText primary={post.content} secondary={post.createdAt} />\n          </ListItem>\n        ))}\n      </List>\n\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        disabled={!hasMore}\n        style={{ marginRight: \"1rem\" }}\n        onClick={getPosts}\n      >\n        Load More Posts\n      </Button>\n\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => setIsReplying(true)}\n      >\n        Reply\n      </Button>\n      {isReplying && (\n        <form onSubmit={handleReply}>\n          <TextField\n            fullWidth\n            label=\"Content\"\n            value={replyContent}\n            onChange={(e) => setReplyContent(e.target.value)}\n          />\n\n          <Button type=\"submit\">Reply</Button>\n        </form>\n      )}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}