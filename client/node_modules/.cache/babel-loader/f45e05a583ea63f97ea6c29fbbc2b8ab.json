{"ast":null,"code":"var _jsxFileName = \"/Users/CHLY/Downloads/xchangepack/client/src/components/MappingPlanner/MappingPlanner.js\";\nimport * as React from \"react\";\nimport { MultiSelectComponent } from \"@syncfusion/ej2-react-dropdowns\";\nimport { Query } from \"@syncfusion/ej2-data\";\nimport { debounce } from \"@syncfusion/ej2-base\";\nimport { SampleBase } from \"../common/sample-base\";\nimport \"./style.css\";\nimport * as data from \"./dataSource.json\";\nexport class MappingPlanner extends SampleBase {\n  constructor() {\n    super(...arguments);\n    this.temp = \"countries\"; //define the filtering data\n\n    this.data = data[this.temp];\n    this.query = new Query(); // maps the appropriate column to fields property\n\n    this.fields = {\n      text: \"Name\",\n      value: \"Code\"\n    }; // filtering event handler to filter a country\n\n    this.onFiltering = debounce(e => {\n      let query = new Query(); //frame the query based on search string with filter type.\n\n      query = e.text != \"\" ? query.where(\"Name\", \"startswith\", e.text, true) : query; //pass the filter data source, filter query to updateData method.\n\n      e.updateData(this.data, query);\n    }, 400);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"control-pane\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"control-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"multifilter\",\n      className: \"control-styles\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, \"Filtering\"), /*#__PURE__*/React.createElement(MultiSelectComponent, {\n      id: \"comboelement\",\n      dataSource: this.data,\n      filtering: this.onFiltering.bind(this),\n      allowFiltering: true,\n      fields: this.fields,\n      placeholder: \"Select countries\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/CHLY/Downloads/xchangepack/client/src/components/MappingPlanner/MappingPlanner.js"],"names":["React","MultiSelectComponent","Query","debounce","SampleBase","data","MappingPlanner","constructor","arguments","temp","query","fields","text","value","onFiltering","e","where","updateData","render","bind"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,oBAAT,QAAqC,iCAArC;AACA,SAASC,KAAT,QAAsB,sBAAtB;AACA,SAASC,QAAT,QAAyB,sBAAzB;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,OAAO,aAAP;AACA,OAAO,KAAKC,IAAZ,MAAsB,mBAAtB;AACA,OAAO,MAAMC,cAAN,SAA6BF,UAA7B,CAAwC;AAC7CG,EAAAA,WAAW,GAAG;AACZ,UAAM,GAAGC,SAAT;AACA,SAAKC,IAAL,GAAY,WAAZ,CAFY,CAGZ;;AACA,SAAKJ,IAAL,GAAYA,IAAI,CAAC,KAAKI,IAAN,CAAhB;AACA,SAAKC,KAAL,GAAa,IAAIR,KAAJ,EAAb,CALY,CAMZ;;AACA,SAAKS,MAAL,GAAc;AAAEC,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,KAAK,EAAE;AAAvB,KAAd,CAPY,CAQZ;;AACA,SAAKC,WAAL,GAAmBX,QAAQ,CAAEY,CAAD,IAAO;AACjC,UAAIL,KAAK,GAAG,IAAIR,KAAJ,EAAZ,CADiC,CAEjC;;AACAQ,MAAAA,KAAK,GACHK,CAAC,CAACH,IAAF,IAAU,EAAV,GAAeF,KAAK,CAACM,KAAN,CAAY,MAAZ,EAAoB,YAApB,EAAkCD,CAAC,CAACH,IAApC,EAA0C,IAA1C,CAAf,GAAiEF,KADnE,CAHiC,CAKjC;;AACAK,MAAAA,CAAC,CAACE,UAAF,CAAa,KAAKZ,IAAlB,EAAwBK,KAAxB;AACD,KAP0B,EAOxB,GAPwB,CAA3B;AAQD;;AACDQ,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,EAAE,EAAC,aAAR;AAAsB,MAAA,SAAS,EAAC,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE,oBAAC,oBAAD;AACE,MAAA,EAAE,EAAC,cADL;AAEE,MAAA,UAAU,EAAE,KAAKb,IAFnB;AAGE,MAAA,SAAS,EAAE,KAAKS,WAAL,CAAiBK,IAAjB,CAAsB,IAAtB,CAHb;AAIE,MAAA,cAAc,EAAE,IAJlB;AAKE,MAAA,MAAM,EAAE,KAAKR,MALf;AAME,MAAA,WAAW,EAAC,kBANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF,CADF;AAiBD;;AArC4C","sourcesContent":["import * as React from \"react\";\nimport { MultiSelectComponent } from \"@syncfusion/ej2-react-dropdowns\";\nimport { Query } from \"@syncfusion/ej2-data\";\nimport { debounce } from \"@syncfusion/ej2-base\";\nimport { SampleBase } from \"../common/sample-base\";\nimport \"./style.css\";\nimport * as data from \"./dataSource.json\";\nexport class MappingPlanner extends SampleBase {\n  constructor() {\n    super(...arguments);\n    this.temp = \"countries\";\n    //define the filtering data\n    this.data = data[this.temp];\n    this.query = new Query();\n    // maps the appropriate column to fields property\n    this.fields = { text: \"Name\", value: \"Code\" };\n    // filtering event handler to filter a country\n    this.onFiltering = debounce((e) => {\n      let query = new Query();\n      //frame the query based on search string with filter type.\n      query =\n        e.text != \"\" ? query.where(\"Name\", \"startswith\", e.text, true) : query;\n      //pass the filter data source, filter query to updateData method.\n      e.updateData(this.data, query);\n    }, 400);\n  }\n  render() {\n    return (\n      <div className=\"control-pane\">\n        <div className=\"control-section\">\n          <div id=\"multifilter\" className=\"control-styles\">\n            <h4>Filtering</h4>\n            <MultiSelectComponent\n              id=\"comboelement\"\n              dataSource={this.data}\n              filtering={this.onFiltering.bind(this)}\n              allowFiltering={true}\n              fields={this.fields}\n              placeholder=\"Select countries\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}