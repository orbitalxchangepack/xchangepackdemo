{"ast":null,"code":"var _jsxFileName = \"/Users/CHLY/Downloads/xchangepack/client/src/components/Ask/Pages/Forum/ShowForum.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport List from \"@material-ui/core/List\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nexport default function ShowForum() {\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  const [forum, setForum] = useState(null);\n  const [threads, setThreads] = useState([]);\n  useEffect(() => {\n    const getForum = async () => {\n      const response = await axios.get(\"/api/forum/\" + id);\n      setForum(response.data);\n    };\n\n    getForum();\n\n    const getThreads = async () => {\n      const response = await axios.get(\"/api/thread/forum/\" + id);\n      setThreads(response.data);\n    };\n\n    getThreads();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: \"2rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, forum && /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, forum.title), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    onClick: () => history.push(\"/thread/create/\" + id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Create Thread\"), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, threads.map((thread, index) => /*#__PURE__*/React.createElement(ListItem, {\n    key: index,\n    button: true,\n    onClick: () => history.push(`/thread/${thread._id}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: thread.title,\n    secondary: thread.createdAt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/CHLY/Downloads/xchangepack/client/src/components/Ask/Pages/Forum/ShowForum.js"],"names":["React","useState","useEffect","Button","useHistory","useParams","axios","List","ListItemText","ListItem","ShowForum","history","id","forum","setForum","threads","setThreads","getForum","response","get","data","getThreads","padding","title","push","map","thread","index","_id","createdAt"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,kBAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAGA,eAAe,SAASC,SAAT,GAAqB;AAClC,QAAMC,OAAO,GAAGP,UAAU,EAA1B;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAASP,SAAS,EAAxB;AAEA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,EAAD,CAAtC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,QAAQ,GAAG,YAAY;AAC3B,YAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAU,gBAAgBP,EAA1B,CAAvB;AACAE,MAAAA,QAAQ,CAACI,QAAQ,CAACE,IAAV,CAAR;AACD,KAHD;;AAIAH,IAAAA,QAAQ;;AACR,UAAMI,UAAU,GAAG,YAAY;AAC7B,YAAMH,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAN,CAAU,uBAAuBP,EAAjC,CAAvB;AACAI,MAAAA,UAAU,CAACE,QAAQ,CAACE,IAAV,CAAV;AACD,KAHD;;AAKAC,IAAAA,UAAU;AACX,GAZQ,EAYN,EAZM,CAAT;AAcA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,KAAK,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACU,KAAX,CADZ,eAGE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,WADV;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,OAAO,EAAE,MAAMZ,OAAO,CAACa,IAAR,CAAa,oBAAoBZ,EAAjC,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHF,eAUE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,OAAO,CAACU,GAAR,CAAY,CAACC,MAAD,EAASC,KAAT,kBACX,oBAAC,QAAD;AACE,IAAA,GAAG,EAAEA,KADP;AAEE,IAAA,MAAM,MAFR;AAGE,IAAA,OAAO,EAAE,MAAMhB,OAAO,CAACa,IAAR,CAAc,WAAUE,MAAM,CAACE,GAAI,EAAnC,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEF,MAAM,CAACH,KAA9B;AAAqC,IAAA,SAAS,EAAEG,MAAM,CAACG,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADD,CADH,CAVF,CADF;AAwBD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport List from \"@material-ui/core/List\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\n\n\nexport default function ShowForum() {\n  const history = useHistory();\n  const { id } = useParams();\n\n  const [forum, setForum] = useState(null);\n  const [threads, setThreads] = useState([]);\n  useEffect(() => {\n    const getForum = async () => {\n      const response = await axios.get(\"/api/forum/\" + id);\n      setForum(response.data);\n    };\n    getForum();\n    const getThreads = async () => {\n      const response = await axios.get(\"/api/thread/forum/\" + id);\n      setThreads(response.data);\n    };\n\n    getThreads();\n  }, []);\n\n  return (\n    <div style={{ padding: \"2rem\" }}>\n      {forum && <h1>{forum.title}</h1>}\n\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => history.push(\"/thread/create/\" + id)}\n      >\n        Create Thread\n      </Button>\n      <List>\n        {threads.map((thread, index) => (\n          <ListItem\n            key={index}\n            button\n            onClick={() => history.push(`/thread/${thread._id}`)}\n          >\n            <ListItemText primary={thread.title} secondary={thread.createdAt} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}