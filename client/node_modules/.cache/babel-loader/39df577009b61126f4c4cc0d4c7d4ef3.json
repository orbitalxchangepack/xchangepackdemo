{"ast":null,"code":"import _regeneratorRuntime from\"/Users/CHLY/Downloads/xchangepack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/CHLY/Downloads/xchangepack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/CHLY/Downloads/xchangepack/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from\"react\";import{TextField}from\"@material-ui/core\";import Button from\"@material-ui/core/Button\";import axios from\"axios\";import{useHistory,useParams}from\"react-router-dom\";import AuthContext from\"../../Contexts/AuthContext\";var CreateForum=function CreateForum(){var _useContext=useContext(AuthContext),user=_useContext.user;var _useParams=useParams(),id=_useParams.id;var history=useHistory();var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),title=_useState2[0],setTitle=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),content=_useState4[0],setContent=_useState4[1];var handleOnSubmit=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var data,response,_id;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();data={title:title,content:content,userId:user._id,forumId:id};_context.next=4;return axios.post('/api/thread/create',data);case 4:response=_context.sent;_id=response.data._id;history.push('/thread/'+_id);case 7:case\"end\":return _context.stop();}}},_callee);}));return function handleOnSubmit(_x){return _ref.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(\"div\",{style:{padding:\"2rem\"}},/*#__PURE__*/React.createElement(\"h1\",{style:{marginBottom:\"2rem\"}},\"Create Thread\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleOnSubmit},/*#__PURE__*/React.createElement(TextField,{label:\"Title\",required:true,fullWidth:true,margin:\"normal\",value:title,onChange:function onChange(e){return setTitle(e.target.value);}}),/*#__PURE__*/React.createElement(\"textarea\",{placeholder:\"Content\",required:true,value:content,style:{width:\"100%\",height:250},onChange:function onChange(e){return setContent(e.target.value);}}),/*#__PURE__*/React.createElement(Button,{type:\"submit\",variant:\"contained\",color:\"primary\"},\"Create\")));};export default CreateForum;","map":{"version":3,"sources":["/Users/CHLY/Downloads/xchangepack/client/src/components/Ask/Pages/Thread/CreateThread.js"],"names":["React","useState","useContext","TextField","Button","axios","useHistory","useParams","AuthContext","CreateForum","user","id","history","title","setTitle","content","setContent","handleOnSubmit","event","preventDefault","data","userId","_id","forumId","post","response","push","padding","marginBottom","e","target","value","width","height"],"mappings":"0dAAA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,CAAyBC,UAAzB,KAA0C,OAA1C,CACA,OAAQC,SAAR,KAAwB,mBAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,UAAR,CAAoBC,SAApB,KAAoC,kBAApC,CACA,MAAOC,CAAAA,WAAP,KAAwB,4BAAxB,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,iBACPP,UAAU,CAACM,WAAD,CADH,CACfE,IADe,aACfA,IADe,gBAETH,SAAS,EAFA,CAEfI,EAFe,YAEfA,EAFe,CAGtB,GAAMC,CAAAA,OAAO,CAAGN,UAAU,EAA1B,CAHsB,cAIIL,QAAQ,CAAC,EAAD,CAJZ,wCAIfY,KAJe,eAIRC,QAJQ,8BAKQb,QAAQ,CAAC,EAAD,CALhB,yCAKfc,OALe,eAKNC,UALM,eAOtB,GAAMC,CAAAA,cAAc,0FAAG,iBAAMC,KAAN,wIACnBA,KAAK,CAACC,cAAN,GAEMC,IAHa,CAGN,CACTP,KAAK,CAALA,KADS,CAETE,OAAO,CAAPA,OAFS,CAGTM,MAAM,CAAEX,IAAI,CAACY,GAHJ,CAITC,OAAO,CAAEZ,EAJA,CAHM,uBAUIN,CAAAA,KAAK,CAACmB,IAAN,CAAW,oBAAX,CAAiCJ,IAAjC,CAVJ,QAUbK,QAVa,eAWZH,GAXY,CAWLG,QAAQ,CAACL,IAXJ,CAWZE,GAXY,CAYnBV,OAAO,CAACc,IAAR,CAAa,WAAWJ,GAAxB,EAZmB,sDAAH,kBAAdL,CAAAA,cAAc,4CAApB,CAeA,mBACI,2BAAK,KAAK,CAAE,CAACU,OAAO,CAAE,MAAV,CAAZ,eACI,0BAAI,KAAK,CAAE,CAACC,YAAY,CAAE,MAAf,CAAX,kBADJ,cAGI,4BAAM,QAAQ,CAAEX,cAAhB,eACI,oBAAC,SAAD,EAAW,KAAK,CAAC,OAAjB,CACW,QAAQ,KADnB,CAEW,SAAS,KAFpB,CAGW,MAAM,CAAC,QAHlB,CAIW,KAAK,CAAEJ,KAJlB,CAKW,QAAQ,CAAE,kBAAAgB,CAAC,QAAIf,CAAAA,QAAQ,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ,EALtB,EADJ,cAQG,gCAAU,WAAW,CAAC,SAAtB,CACU,QAAQ,KADlB,CAEU,KAAK,CAAEhB,OAFjB,CAGU,KAAK,CAAE,CAACiB,KAAK,CAAE,MAAR,CAAgBC,MAAM,CAAE,GAAxB,CAHjB,CAIU,QAAQ,CAAE,kBAAAJ,CAAC,QAAIb,CAAAA,UAAU,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd,EAJrB,EARH,cAeI,oBAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAC,WAA9B,CAA0C,KAAK,CAAC,SAAhD,WAfJ,CAHJ,CADJ,CAuBH,CA7CD,CA+CA,cAAetB,CAAAA,WAAf","sourcesContent":["import React, {useState, useContext} from \"react\";\nimport {TextField} from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport axios from \"axios\";\nimport {useHistory, useParams} from \"react-router-dom\";\nimport AuthContext from \"../../Contexts/AuthContext\";\n\nconst CreateForum = () => {\n    const {user} = useContext(AuthContext);\n    const {id} = useParams();\n    const history = useHistory();\n    const [title, setTitle] = useState(\"\");\n    const [content, setContent] = useState(\"\");\n\n    const handleOnSubmit = async event => {\n        event.preventDefault();\n\n        const data = {\n            title,\n            content,\n            userId: user._id,\n            forumId: id\n        };\n\n        const response = await axios.post('/api/thread/create', data);\n        const {_id} = response.data;\n        history.push('/thread/'+_id);\n    };\n\n    return (\n        <div style={{padding: \"2rem\"}}>\n            <h1 style={{marginBottom: \"2rem\"}}>Create Thread</h1>\n\n            <form onSubmit={handleOnSubmit}>\n                <TextField label=\"Title\"\n                           required\n                           fullWidth\n                           margin=\"normal\"\n                           value={title}\n                           onChange={e => setTitle(e.target.value)}/>\n\n               <textarea placeholder=\"Content\"\n                         required\n                         value={content}\n                         style={{width: \"100%\", height: 250}}\n                         onChange={e => setContent(e.target.value)}>\n\n               </textarea>\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">Create</Button>\n            </form>\n        </div>\n    )\n};\n\nexport default CreateForum;"]},"metadata":{},"sourceType":"module"}