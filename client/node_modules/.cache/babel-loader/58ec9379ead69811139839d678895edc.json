{"ast":null,"code":"var _jsxFileName = \"/Users/CHLY/Downloads/xchangepack/client/src/components/MappingPlanner/MappingPlanner.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./MappingPlanner.css\";\nimport edurecdata from \"./dataraw/json/EdurecSEP_raw.json\";\nimport Datatable from \"./datatable\";\n\nrequire(\"es6-promise\").polyfill();\n\nrequire(\"isomorphic-fetch\");\n\nexport default function MappingPlanner() {\n  const [data, setData] = useState([]);\n  const [q, setQ] = useState(\"\");\n  const [searchColumns, setSearchColumns] = useState([\"School_ID\"]);\n  useEffect(() => {\n    setData(edurecdata);\n  }, []);\n\n  function search(rows) {\n    return rows.filter(row => searchColumns.some(column => row[column].toString().toLowerCase().indexOf(q.toLowerCase()) > -1));\n  }\n\n  const columns = data[0] && Object.keys(data[0]);\n  return /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 14,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: q,\n    onChange: e => setQ(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), columns && columns.map(column => /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: searchColumns.includes(column),\n    onChange: e => {\n      const checked = searchColumns.includes(column);\n      setSearchColumns(prev => checked ? prev.filter(sc => sc !== column) : [...prev, column]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 19\n    }\n  }), column))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Datatable, {\n    data: search(data),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["/Users/CHLY/Downloads/xchangepack/client/src/components/MappingPlanner/MappingPlanner.jsx"],"names":["React","useState","useEffect","edurecdata","Datatable","require","polyfill","MappingPlanner","data","setData","q","setQ","searchColumns","setSearchColumns","search","rows","filter","row","some","column","toString","toLowerCase","indexOf","columns","Object","keys","e","target","value","map","includes","checked","prev","sc"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,sBAAP;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEAC,OAAO,CAAC,aAAD,CAAP,CAAuBC,QAAvB;;AACAD,OAAO,CAAC,kBAAD,CAAP;;AAEA,eAAe,SAASE,cAAT,GAA0B;AACvC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,CAAD,EAAIC,IAAJ,IAAYV,QAAQ,CAAC,EAAD,CAA1B;AACA,QAAM,CAACW,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAC,CAAC,WAAD,CAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,OAAO,CAACN,UAAD,CAAP;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,WAASW,MAAT,CAAgBC,IAAhB,EAAsB;AACpB,WAAOA,IAAI,CAACC,MAAL,CAAaC,GAAD,IACjBL,aAAa,CAACM,IAAd,CACGC,MAAD,IACEF,GAAG,CAACE,MAAD,CAAH,CAAYC,QAAZ,GAAuBC,WAAvB,GAAqCC,OAArC,CAA6CZ,CAAC,CAACW,WAAF,EAA7C,IAAgE,CAAC,CAFrE,CADK,CAAP;AAMD;;AAED,QAAME,OAAO,GAAGf,IAAI,CAAC,CAAD,CAAJ,IAAWgB,MAAM,CAACC,IAAP,CAAYjB,IAAI,CAAC,CAAD,CAAhB,CAA3B;AACA,sBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEE,CAFT;AAGE,IAAA,QAAQ,EAAGgB,CAAD,IAAOf,IAAI,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAMGL,OAAO,IACNA,OAAO,CAACM,GAAR,CAAaV,MAAD,iBACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,OAAO,EAAEP,aAAa,CAACkB,QAAd,CAAuBX,MAAvB,CAFX;AAGE,IAAA,QAAQ,EAAGO,CAAD,IAAO;AACf,YAAMK,OAAO,GAAGnB,aAAa,CAACkB,QAAd,CAAuBX,MAAvB,CAAhB;AACAN,MAAAA,gBAAgB,CAAEmB,IAAD,IACfD,OAAO,GACHC,IAAI,CAAChB,MAAL,CAAaiB,EAAD,IAAQA,EAAE,KAAKd,MAA3B,CADG,GAEH,CAAC,GAAGa,IAAJ,EAAUb,MAAV,CAHU,CAAhB;AAKD,KAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAaGA,MAbH,CADF,CAPJ,CADF,eA0BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAEL,MAAM,CAACN,IAAD,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA1BF,CADF,CADF,CADF;AAoCD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./MappingPlanner.css\";\nimport edurecdata from \"./dataraw/json/EdurecSEP_raw.json\";\nimport Datatable from \"./datatable\";\n\nrequire(\"es6-promise\").polyfill();\nrequire(\"isomorphic-fetch\");\n\nexport default function MappingPlanner() {\n  const [data, setData] = useState([]);\n  const [q, setQ] = useState(\"\");\n  const [searchColumns, setSearchColumns] = useState([\"School_ID\"]);\n\n  useEffect(() => {\n    setData(edurecdata);\n  }, []);\n\n  function search(rows) {\n    return rows.filter((row) =>\n      searchColumns.some(\n        (column) =>\n          row[column].toString().toLowerCase().indexOf(q.toLowerCase()) > -1\n      )\n    );\n  }\n\n  const columns = data[0] && Object.keys(data[0]);\n  return (\n    <Grid>\n      <Grid.Column width={14}>\n        <div>\n          <div>\n            <input\n              type=\"text\"\n              value={q}\n              onChange={(e) => setQ(e.target.value)}\n            />\n            {columns &&\n              columns.map((column) => (\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={searchColumns.includes(column)}\n                    onChange={(e) => {\n                      const checked = searchColumns.includes(column);\n                      setSearchColumns((prev) =>\n                        checked\n                          ? prev.filter((sc) => sc !== column)\n                          : [...prev, column]\n                      );\n                    }}\n                  />\n                  {column}\n                </label>\n              ))}\n          </div>\n          <div>\n            <Datatable data={search(data)} />\n          </div>\n        </div>\n      </Grid.Column>\n    </Grid>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}